//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Backend.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Entities : DbContext
    {
        public Entities()
            : base("name=Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<tblNewEmployee> tblNewEmployees { get; set; }
        public virtual DbSet<tblEmployerInfo> tblEmployerInfoes { get; set; }
        public virtual DbSet<tblJobPosition> tblJobPositions { get; set; }
        public virtual DbSet<tblEmployerBank> tblEmployerBanks { get; set; }
        public virtual DbSet<tblEmployerDepartment> tblEmployerDepartments { get; set; }
        public virtual DbSet<tblEmployerBranch> tblEmployerBranches { get; set; }
        public virtual DbSet<tblEmployerLevel> tblEmployerLevels { get; set; }
        public virtual DbSet<tblEmployerCourse> tblEmployerCourses { get; set; }
        public virtual DbSet<tblEmployerTrainer> tblEmployerTrainers { get; set; }
        public virtual DbSet<tblEmployerEthnicity> tblEmployerEthnicities { get; set; }
        public virtual DbSet<tblEmployerReligion> tblEmployerReligions { get; set; }
        public virtual DbSet<tblEmployerDocumentCategory> tblEmployerDocumentCategories { get; set; }
    
        public virtual ObjectResult<proc_AddEditNewEmployee_Result> proc_AddEditNewEmployee(Nullable<int> newEmployeeId, Nullable<int> id, string name, string gender, string position, string department, Nullable<System.DateTime> dateJoined, string status, Nullable<System.DateTime> modified, Nullable<bool> delete)
        {
            var newEmployeeIdParameter = newEmployeeId.HasValue ?
                new ObjectParameter("NewEmployeeId", newEmployeeId) :
                new ObjectParameter("NewEmployeeId", typeof(int));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            var positionParameter = position != null ?
                new ObjectParameter("Position", position) :
                new ObjectParameter("Position", typeof(string));
    
            var departmentParameter = department != null ?
                new ObjectParameter("Department", department) :
                new ObjectParameter("Department", typeof(string));
    
            var dateJoinedParameter = dateJoined.HasValue ?
                new ObjectParameter("DateJoined", dateJoined) :
                new ObjectParameter("DateJoined", typeof(System.DateTime));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var modifiedParameter = modified.HasValue ?
                new ObjectParameter("Modified", modified) :
                new ObjectParameter("Modified", typeof(System.DateTime));
    
            var deleteParameter = delete.HasValue ?
                new ObjectParameter("Delete", delete) :
                new ObjectParameter("Delete", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_AddEditNewEmployee_Result>("proc_AddEditNewEmployee", newEmployeeIdParameter, idParameter, nameParameter, genderParameter, positionParameter, departmentParameter, dateJoinedParameter, statusParameter, modifiedParameter, deleteParameter);
        }
    
        public virtual ObjectResult<proc_GetAllNewEmployee_Result> proc_GetAllNewEmployee()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_GetAllNewEmployee_Result>("proc_GetAllNewEmployee");
        }
    
        public virtual ObjectResult<proc_AddEmployerInfo_Result> proc_AddEmployerInfo(Nullable<int> employerId, string imageName, string name, string registrationNumber, string industry, string homeCountry, string portalUrl, string email, string webSite, string address1, string address2, string city, string postalCode, string state, string country, string telephone, string fax)
        {
            var employerIdParameter = employerId.HasValue ?
                new ObjectParameter("EmployerId", employerId) :
                new ObjectParameter("EmployerId", typeof(int));
    
            var imageNameParameter = imageName != null ?
                new ObjectParameter("ImageName", imageName) :
                new ObjectParameter("ImageName", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var registrationNumberParameter = registrationNumber != null ?
                new ObjectParameter("RegistrationNumber", registrationNumber) :
                new ObjectParameter("RegistrationNumber", typeof(string));
    
            var industryParameter = industry != null ?
                new ObjectParameter("Industry", industry) :
                new ObjectParameter("Industry", typeof(string));
    
            var homeCountryParameter = homeCountry != null ?
                new ObjectParameter("HomeCountry", homeCountry) :
                new ObjectParameter("HomeCountry", typeof(string));
    
            var portalUrlParameter = portalUrl != null ?
                new ObjectParameter("PortalUrl", portalUrl) :
                new ObjectParameter("PortalUrl", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var webSiteParameter = webSite != null ?
                new ObjectParameter("WebSite", webSite) :
                new ObjectParameter("WebSite", typeof(string));
    
            var address1Parameter = address1 != null ?
                new ObjectParameter("Address1", address1) :
                new ObjectParameter("Address1", typeof(string));
    
            var address2Parameter = address2 != null ?
                new ObjectParameter("Address2", address2) :
                new ObjectParameter("Address2", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var postalCodeParameter = postalCode != null ?
                new ObjectParameter("PostalCode", postalCode) :
                new ObjectParameter("PostalCode", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var countryParameter = country != null ?
                new ObjectParameter("Country", country) :
                new ObjectParameter("Country", typeof(string));
    
            var telephoneParameter = telephone != null ?
                new ObjectParameter("Telephone", telephone) :
                new ObjectParameter("Telephone", typeof(string));
    
            var faxParameter = fax != null ?
                new ObjectParameter("Fax", fax) :
                new ObjectParameter("Fax", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_AddEmployerInfo_Result>("proc_AddEmployerInfo", employerIdParameter, imageNameParameter, nameParameter, registrationNumberParameter, industryParameter, homeCountryParameter, portalUrlParameter, emailParameter, webSiteParameter, address1Parameter, address2Parameter, cityParameter, postalCodeParameter, stateParameter, countryParameter, telephoneParameter, faxParameter);
        }
    
        public virtual ObjectResult<proc_GetAllEmployerInfo_Result> proc_GetAllEmployerInfo()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_GetAllEmployerInfo_Result>("proc_GetAllEmployerInfo");
        }
    
        public virtual ObjectResult<proc_UpdateEmployerInfo_Result> proc_UpdateEmployerInfo(Nullable<int> employerId, string imageName, string name, string registrationNumber, string industry, string homeCountry, string portalUrl, string email, string webSite, string address1, string address2, string city, string postalCode, string state, string country, string telephone, string fax)
        {
            var employerIdParameter = employerId.HasValue ?
                new ObjectParameter("EmployerId", employerId) :
                new ObjectParameter("EmployerId", typeof(int));
    
            var imageNameParameter = imageName != null ?
                new ObjectParameter("ImageName", imageName) :
                new ObjectParameter("ImageName", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var registrationNumberParameter = registrationNumber != null ?
                new ObjectParameter("RegistrationNumber", registrationNumber) :
                new ObjectParameter("RegistrationNumber", typeof(string));
    
            var industryParameter = industry != null ?
                new ObjectParameter("Industry", industry) :
                new ObjectParameter("Industry", typeof(string));
    
            var homeCountryParameter = homeCountry != null ?
                new ObjectParameter("HomeCountry", homeCountry) :
                new ObjectParameter("HomeCountry", typeof(string));
    
            var portalUrlParameter = portalUrl != null ?
                new ObjectParameter("PortalUrl", portalUrl) :
                new ObjectParameter("PortalUrl", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var webSiteParameter = webSite != null ?
                new ObjectParameter("WebSite", webSite) :
                new ObjectParameter("WebSite", typeof(string));
    
            var address1Parameter = address1 != null ?
                new ObjectParameter("Address1", address1) :
                new ObjectParameter("Address1", typeof(string));
    
            var address2Parameter = address2 != null ?
                new ObjectParameter("Address2", address2) :
                new ObjectParameter("Address2", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var postalCodeParameter = postalCode != null ?
                new ObjectParameter("PostalCode", postalCode) :
                new ObjectParameter("PostalCode", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var countryParameter = country != null ?
                new ObjectParameter("Country", country) :
                new ObjectParameter("Country", typeof(string));
    
            var telephoneParameter = telephone != null ?
                new ObjectParameter("Telephone", telephone) :
                new ObjectParameter("Telephone", typeof(string));
    
            var faxParameter = fax != null ?
                new ObjectParameter("Fax", fax) :
                new ObjectParameter("Fax", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_UpdateEmployerInfo_Result>("proc_UpdateEmployerInfo", employerIdParameter, imageNameParameter, nameParameter, registrationNumberParameter, industryParameter, homeCountryParameter, portalUrlParameter, emailParameter, webSiteParameter, address1Parameter, address2Parameter, cityParameter, postalCodeParameter, stateParameter, countryParameter, telephoneParameter, faxParameter);
        }
    
        public virtual ObjectResult<proc_AddEditJobPosition_Result> proc_AddEditJobPosition(Nullable<int> jobPositionId, string code, string title, Nullable<bool> active, string responsibility, Nullable<bool> delete)
        {
            var jobPositionIdParameter = jobPositionId.HasValue ?
                new ObjectParameter("JobPositionId", jobPositionId) :
                new ObjectParameter("JobPositionId", typeof(int));
    
            var codeParameter = code != null ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var responsibilityParameter = responsibility != null ?
                new ObjectParameter("Responsibility", responsibility) :
                new ObjectParameter("Responsibility", typeof(string));
    
            var deleteParameter = delete.HasValue ?
                new ObjectParameter("Delete", delete) :
                new ObjectParameter("Delete", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_AddEditJobPosition_Result>("proc_AddEditJobPosition", jobPositionIdParameter, codeParameter, titleParameter, activeParameter, responsibilityParameter, deleteParameter);
        }
    
        public virtual ObjectResult<proc_GetAllJobPosition_Result> proc_GetAllJobPosition()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_GetAllJobPosition_Result>("proc_GetAllJobPosition");
        }
    
        public virtual ObjectResult<proc_AddEditEmployerBank_Result> proc_AddEditEmployerBank(Nullable<int> bankId, string code, string name, Nullable<bool> active, string bankAccount, string address1, string address2, string city, string postalCode, string state, string country, string telephone, string fax, Nullable<bool> delete)
        {
            var bankIdParameter = bankId.HasValue ?
                new ObjectParameter("BankId", bankId) :
                new ObjectParameter("BankId", typeof(int));
    
            var codeParameter = code != null ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var bankAccountParameter = bankAccount != null ?
                new ObjectParameter("BankAccount", bankAccount) :
                new ObjectParameter("BankAccount", typeof(string));
    
            var address1Parameter = address1 != null ?
                new ObjectParameter("Address1", address1) :
                new ObjectParameter("Address1", typeof(string));
    
            var address2Parameter = address2 != null ?
                new ObjectParameter("Address2", address2) :
                new ObjectParameter("Address2", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var postalCodeParameter = postalCode != null ?
                new ObjectParameter("PostalCode", postalCode) :
                new ObjectParameter("PostalCode", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var countryParameter = country != null ?
                new ObjectParameter("Country", country) :
                new ObjectParameter("Country", typeof(string));
    
            var telephoneParameter = telephone != null ?
                new ObjectParameter("Telephone", telephone) :
                new ObjectParameter("Telephone", typeof(string));
    
            var faxParameter = fax != null ?
                new ObjectParameter("Fax", fax) :
                new ObjectParameter("Fax", typeof(string));
    
            var deleteParameter = delete.HasValue ?
                new ObjectParameter("Delete", delete) :
                new ObjectParameter("Delete", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_AddEditEmployerBank_Result>("proc_AddEditEmployerBank", bankIdParameter, codeParameter, nameParameter, activeParameter, bankAccountParameter, address1Parameter, address2Parameter, cityParameter, postalCodeParameter, stateParameter, countryParameter, telephoneParameter, faxParameter, deleteParameter);
        }
    
        public virtual ObjectResult<proc_GetAllEmployerBank_Result> proc_GetAllEmployerBank()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_GetAllEmployerBank_Result>("proc_GetAllEmployerBank");
        }
    
        public virtual ObjectResult<proc_GetAllEmployerBanks_Result> proc_GetAllEmployerBanks()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_GetAllEmployerBanks_Result>("proc_GetAllEmployerBanks");
        }
    
        public virtual ObjectResult<proc_UpdateEmployerInformation_Result> proc_UpdateEmployerInformation(Nullable<int> employerId, string imageName, string name, string registrationNumber, string industry, string homeCountry, string portalUrl, string email, string webSite, string address1, string address2, string city, string postalCode, string state, string country, string telephone, string fax)
        {
            var employerIdParameter = employerId.HasValue ?
                new ObjectParameter("EmployerId", employerId) :
                new ObjectParameter("EmployerId", typeof(int));
    
            var imageNameParameter = imageName != null ?
                new ObjectParameter("ImageName", imageName) :
                new ObjectParameter("ImageName", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var registrationNumberParameter = registrationNumber != null ?
                new ObjectParameter("RegistrationNumber", registrationNumber) :
                new ObjectParameter("RegistrationNumber", typeof(string));
    
            var industryParameter = industry != null ?
                new ObjectParameter("Industry", industry) :
                new ObjectParameter("Industry", typeof(string));
    
            var homeCountryParameter = homeCountry != null ?
                new ObjectParameter("HomeCountry", homeCountry) :
                new ObjectParameter("HomeCountry", typeof(string));
    
            var portalUrlParameter = portalUrl != null ?
                new ObjectParameter("PortalUrl", portalUrl) :
                new ObjectParameter("PortalUrl", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var webSiteParameter = webSite != null ?
                new ObjectParameter("WebSite", webSite) :
                new ObjectParameter("WebSite", typeof(string));
    
            var address1Parameter = address1 != null ?
                new ObjectParameter("Address1", address1) :
                new ObjectParameter("Address1", typeof(string));
    
            var address2Parameter = address2 != null ?
                new ObjectParameter("Address2", address2) :
                new ObjectParameter("Address2", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var postalCodeParameter = postalCode != null ?
                new ObjectParameter("PostalCode", postalCode) :
                new ObjectParameter("PostalCode", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var countryParameter = country != null ?
                new ObjectParameter("Country", country) :
                new ObjectParameter("Country", typeof(string));
    
            var telephoneParameter = telephone != null ?
                new ObjectParameter("Telephone", telephone) :
                new ObjectParameter("Telephone", typeof(string));
    
            var faxParameter = fax != null ?
                new ObjectParameter("Fax", fax) :
                new ObjectParameter("Fax", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_UpdateEmployerInformation_Result>("proc_UpdateEmployerInformation", employerIdParameter, imageNameParameter, nameParameter, registrationNumberParameter, industryParameter, homeCountryParameter, portalUrlParameter, emailParameter, webSiteParameter, address1Parameter, address2Parameter, cityParameter, postalCodeParameter, stateParameter, countryParameter, telephoneParameter, faxParameter);
        }
    
        public virtual ObjectResult<proc_AddEditEmployerBanks_Result> proc_AddEditEmployerBanks(Nullable<int> bankId, string code, string name, Nullable<bool> active, string bankAccount, string address1, string address2, string city, string postalCode, string state, string country, string telephone, string fax, Nullable<bool> delete)
        {
            var bankIdParameter = bankId.HasValue ?
                new ObjectParameter("BankId", bankId) :
                new ObjectParameter("BankId", typeof(int));
    
            var codeParameter = code != null ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var bankAccountParameter = bankAccount != null ?
                new ObjectParameter("BankAccount", bankAccount) :
                new ObjectParameter("BankAccount", typeof(string));
    
            var address1Parameter = address1 != null ?
                new ObjectParameter("Address1", address1) :
                new ObjectParameter("Address1", typeof(string));
    
            var address2Parameter = address2 != null ?
                new ObjectParameter("Address2", address2) :
                new ObjectParameter("Address2", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var postalCodeParameter = postalCode != null ?
                new ObjectParameter("PostalCode", postalCode) :
                new ObjectParameter("PostalCode", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var countryParameter = country != null ?
                new ObjectParameter("Country", country) :
                new ObjectParameter("Country", typeof(string));
    
            var telephoneParameter = telephone != null ?
                new ObjectParameter("Telephone", telephone) :
                new ObjectParameter("Telephone", typeof(string));
    
            var faxParameter = fax != null ?
                new ObjectParameter("Fax", fax) :
                new ObjectParameter("Fax", typeof(string));
    
            var deleteParameter = delete.HasValue ?
                new ObjectParameter("Delete", delete) :
                new ObjectParameter("Delete", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_AddEditEmployerBanks_Result>("proc_AddEditEmployerBanks", bankIdParameter, codeParameter, nameParameter, activeParameter, bankAccountParameter, address1Parameter, address2Parameter, cityParameter, postalCodeParameter, stateParameter, countryParameter, telephoneParameter, faxParameter, deleteParameter);
        }
    
        public virtual ObjectResult<proc_AddEditEmployerDepartment_Result> proc_AddEditEmployerDepartment(Nullable<int> departmentId, string name, string code, Nullable<bool> active, Nullable<bool> delete)
        {
            var departmentIdParameter = departmentId.HasValue ?
                new ObjectParameter("DepartmentId", departmentId) :
                new ObjectParameter("DepartmentId", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var codeParameter = code != null ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var deleteParameter = delete.HasValue ?
                new ObjectParameter("Delete", delete) :
                new ObjectParameter("Delete", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_AddEditEmployerDepartment_Result>("proc_AddEditEmployerDepartment", departmentIdParameter, nameParameter, codeParameter, activeParameter, deleteParameter);
        }
    
        public virtual ObjectResult<proc_GetAllEmployerDepartment_Result> proc_GetAllEmployerDepartment()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_GetAllEmployerDepartment_Result>("proc_GetAllEmployerDepartment");
        }
    
        public virtual ObjectResult<proc_UpdateEmployerImage_Result> proc_UpdateEmployerImage(Nullable<int> employerId, string imageName)
        {
            var employerIdParameter = employerId.HasValue ?
                new ObjectParameter("EmployerId", employerId) :
                new ObjectParameter("EmployerId", typeof(int));
    
            var imageNameParameter = imageName != null ?
                new ObjectParameter("ImageName", imageName) :
                new ObjectParameter("ImageName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_UpdateEmployerImage_Result>("proc_UpdateEmployerImage", employerIdParameter, imageNameParameter);
        }
    
        public virtual ObjectResult<proc_EditEmployerInformations_Result> proc_EditEmployerInformations(Nullable<int> employerId, string name, string registrationNumber, string industry, string homeCountry, string portalUrl, string email, string webSite, string address1, string address2, string city, string postalCode, string state, string country, string telephone, string fax)
        {
            var employerIdParameter = employerId.HasValue ?
                new ObjectParameter("EmployerId", employerId) :
                new ObjectParameter("EmployerId", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var registrationNumberParameter = registrationNumber != null ?
                new ObjectParameter("RegistrationNumber", registrationNumber) :
                new ObjectParameter("RegistrationNumber", typeof(string));
    
            var industryParameter = industry != null ?
                new ObjectParameter("Industry", industry) :
                new ObjectParameter("Industry", typeof(string));
    
            var homeCountryParameter = homeCountry != null ?
                new ObjectParameter("HomeCountry", homeCountry) :
                new ObjectParameter("HomeCountry", typeof(string));
    
            var portalUrlParameter = portalUrl != null ?
                new ObjectParameter("PortalUrl", portalUrl) :
                new ObjectParameter("PortalUrl", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var webSiteParameter = webSite != null ?
                new ObjectParameter("WebSite", webSite) :
                new ObjectParameter("WebSite", typeof(string));
    
            var address1Parameter = address1 != null ?
                new ObjectParameter("Address1", address1) :
                new ObjectParameter("Address1", typeof(string));
    
            var address2Parameter = address2 != null ?
                new ObjectParameter("Address2", address2) :
                new ObjectParameter("Address2", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var postalCodeParameter = postalCode != null ?
                new ObjectParameter("PostalCode", postalCode) :
                new ObjectParameter("PostalCode", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var countryParameter = country != null ?
                new ObjectParameter("Country", country) :
                new ObjectParameter("Country", typeof(string));
    
            var telephoneParameter = telephone != null ?
                new ObjectParameter("Telephone", telephone) :
                new ObjectParameter("Telephone", typeof(string));
    
            var faxParameter = fax != null ?
                new ObjectParameter("Fax", fax) :
                new ObjectParameter("Fax", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_EditEmployerInformations_Result>("proc_EditEmployerInformations", employerIdParameter, nameParameter, registrationNumberParameter, industryParameter, homeCountryParameter, portalUrlParameter, emailParameter, webSiteParameter, address1Parameter, address2Parameter, cityParameter, postalCodeParameter, stateParameter, countryParameter, telephoneParameter, faxParameter);
        }
    
        public virtual ObjectResult<proc_AddEditEmployerBranch_Result> proc_AddEditEmployerBranch(Nullable<int> branchId, string code, string name, Nullable<bool> active, Nullable<bool> delete)
        {
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var codeParameter = code != null ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var deleteParameter = delete.HasValue ?
                new ObjectParameter("Delete", delete) :
                new ObjectParameter("Delete", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_AddEditEmployerBranch_Result>("proc_AddEditEmployerBranch", branchIdParameter, codeParameter, nameParameter, activeParameter, deleteParameter);
        }
    
        public virtual ObjectResult<proc_GetAllEmployerBranch_Result> proc_GetAllEmployerBranch()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_GetAllEmployerBranch_Result>("proc_GetAllEmployerBranch");
        }
    
        public virtual ObjectResult<proc_AddEditEmployerLevel_Result> proc_AddEditEmployerLevel(Nullable<int> levelId, string code, string description, Nullable<bool> active, Nullable<bool> delete)
        {
            var levelIdParameter = levelId.HasValue ?
                new ObjectParameter("LevelId", levelId) :
                new ObjectParameter("LevelId", typeof(int));
    
            var codeParameter = code != null ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var deleteParameter = delete.HasValue ?
                new ObjectParameter("Delete", delete) :
                new ObjectParameter("Delete", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_AddEditEmployerLevel_Result>("proc_AddEditEmployerLevel", levelIdParameter, codeParameter, descriptionParameter, activeParameter, deleteParameter);
        }
    
        public virtual ObjectResult<proc_GetAllEmployerLevel_Result> proc_GetAllEmployerLevel()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_GetAllEmployerLevel_Result>("proc_GetAllEmployerLevel");
        }
    
        public virtual ObjectResult<proc_AddUpdateEmployerLevel_Result> proc_AddUpdateEmployerLevel(Nullable<int> levelId, string code, string description, Nullable<bool> active, Nullable<bool> delete)
        {
            var levelIdParameter = levelId.HasValue ?
                new ObjectParameter("LevelId", levelId) :
                new ObjectParameter("LevelId", typeof(int));
    
            var codeParameter = code != null ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var deleteParameter = delete.HasValue ?
                new ObjectParameter("Delete", delete) :
                new ObjectParameter("Delete", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_AddUpdateEmployerLevel_Result>("proc_AddUpdateEmployerLevel", levelIdParameter, codeParameter, descriptionParameter, activeParameter, deleteParameter);
        }
    
        public virtual ObjectResult<proc_AddEditEmployerCourse_Result> proc_AddEditEmployerCourse(Nullable<int> courseId, string code, string description, Nullable<bool> active, Nullable<bool> delete)
        {
            var courseIdParameter = courseId.HasValue ?
                new ObjectParameter("CourseId", courseId) :
                new ObjectParameter("CourseId", typeof(int));
    
            var codeParameter = code != null ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var deleteParameter = delete.HasValue ?
                new ObjectParameter("Delete", delete) :
                new ObjectParameter("Delete", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_AddEditEmployerCourse_Result>("proc_AddEditEmployerCourse", courseIdParameter, codeParameter, descriptionParameter, activeParameter, deleteParameter);
        }
    
        public virtual ObjectResult<proc_GetAllEmployerCourse_Result> proc_GetAllEmployerCourse()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_GetAllEmployerCourse_Result>("proc_GetAllEmployerCourse");
        }
    
        public virtual ObjectResult<proc_AddEditEmployerTrainer_Result> proc_AddEditEmployerTrainer(Nullable<int> trainerId, string code, string description, Nullable<bool> active, Nullable<bool> delete)
        {
            var trainerIdParameter = trainerId.HasValue ?
                new ObjectParameter("TrainerId", trainerId) :
                new ObjectParameter("TrainerId", typeof(int));
    
            var codeParameter = code != null ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var deleteParameter = delete.HasValue ?
                new ObjectParameter("Delete", delete) :
                new ObjectParameter("Delete", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_AddEditEmployerTrainer_Result>("proc_AddEditEmployerTrainer", trainerIdParameter, codeParameter, descriptionParameter, activeParameter, deleteParameter);
        }
    
        public virtual ObjectResult<proc_GetAllEmployerTrainer_Result> proc_GetAllEmployerTrainer()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_GetAllEmployerTrainer_Result>("proc_GetAllEmployerTrainer");
        }
    
        public virtual ObjectResult<proc_AddEditEmployerEthnicity_Result> proc_AddEditEmployerEthnicity(Nullable<int> ethnicityId, string description, Nullable<bool> active, Nullable<bool> delete)
        {
            var ethnicityIdParameter = ethnicityId.HasValue ?
                new ObjectParameter("EthnicityId", ethnicityId) :
                new ObjectParameter("EthnicityId", typeof(int));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var deleteParameter = delete.HasValue ?
                new ObjectParameter("Delete", delete) :
                new ObjectParameter("Delete", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_AddEditEmployerEthnicity_Result>("proc_AddEditEmployerEthnicity", ethnicityIdParameter, descriptionParameter, activeParameter, deleteParameter);
        }
    
        public virtual ObjectResult<proc_GetAllEmployerEthnicity_Result> proc_GetAllEmployerEthnicity()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_GetAllEmployerEthnicity_Result>("proc_GetAllEmployerEthnicity");
        }
    
        public virtual ObjectResult<proc_AddEditEmployerReligion_Result> proc_AddEditEmployerReligion(Nullable<int> religionId, string description, Nullable<bool> active, Nullable<bool> delete)
        {
            var religionIdParameter = religionId.HasValue ?
                new ObjectParameter("ReligionId", religionId) :
                new ObjectParameter("ReligionId", typeof(int));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var deleteParameter = delete.HasValue ?
                new ObjectParameter("Delete", delete) :
                new ObjectParameter("Delete", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_AddEditEmployerReligion_Result>("proc_AddEditEmployerReligion", religionIdParameter, descriptionParameter, activeParameter, deleteParameter);
        }
    
        public virtual ObjectResult<proc_GetAllEmployerReligion_Result> proc_GetAllEmployerReligion()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_GetAllEmployerReligion_Result>("proc_GetAllEmployerReligion");
        }
    
        public virtual ObjectResult<proc_AddEditEmployerDocumentCategory_Result> proc_AddEditEmployerDocumentCategory(Nullable<int> categoryId, string description, Nullable<bool> active, Nullable<bool> delete)
        {
            var categoryIdParameter = categoryId.HasValue ?
                new ObjectParameter("CategoryId", categoryId) :
                new ObjectParameter("CategoryId", typeof(int));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var deleteParameter = delete.HasValue ?
                new ObjectParameter("Delete", delete) :
                new ObjectParameter("Delete", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_AddEditEmployerDocumentCategory_Result>("proc_AddEditEmployerDocumentCategory", categoryIdParameter, descriptionParameter, activeParameter, deleteParameter);
        }
    
        public virtual ObjectResult<proc_GetAllEmployerDocumentCategory_Result> proc_GetAllEmployerDocumentCategory()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_GetAllEmployerDocumentCategory_Result>("proc_GetAllEmployerDocumentCategory");
        }
    }
}
